# ✅ 기능 요약
#
# PR 생성 시 이메일 발송
# PR 병합 시 이메일 발송
# PR 코드리뷰(라인 댓글) 시 이메일 발송
# 이슈 생성 시 이메일 발송
# 불필요한 항목은 출력하지 않음

name: Email Notifications

on:
  # ✅ 이슈가 생성되었을 때 이메일 알림 트리거
  issues:
    types: [opened]

  # ❌ 커밋(push) 알림은 원하지 않으므로 비활성화 (필요시 주석 해제)
  # push:
  #   branches: [develop]

  # ✅ PR 생성 및 병합(닫힘) 시 알림 트리거
  pull_request:
    types: [opened, closed]

  # ✅ PR에 일반 댓글이 달렸을 때 (issue_comment이지만 PR인지 확인 후 필터링함)
  issue_comment:
    types: [created]

  # ✅ PR 코드 라인에 리뷰 댓글이 달렸을 때
  pull_request_review_comment:
    types: [created]


jobs:
  notify_by_email:
    runs-on: ubuntu-latest

    steps:
      - name: Set Custom Event Name and Build Body
        id: set_event_name
        run: |
          EVENT_LABEL=""
          BODY=""

          if [[ "${{ github.event_name }}" == "push" ]]; then
            EVENT_LABEL="커밋"
            TITLE="${{ github.event.head_commit.message }}"
            LINK="${{ github.event.head_commit.url }}"

          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
              EVENT_LABEL="PR Merge"
            else
              EVENT_LABEL="PR"
            fi
            TITLE="${{ github.event.pull_request.title }}"
            LINK="${{ github.event.pull_request.html_url }}"

          elif [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            if [[ "${{ toJson(github.event.issue.pull_request) }}" != "null" ]]; then
              EVENT_LABEL="PR 댓글"
              TITLE="${{ github.event.issue.title }}"
              LINK="${{ github.event.comment.html_url }}"
              COMMENT="${{ github.event.comment.body }}"
              FILE="${{ github.event.comment.path }}"
              LINE="${{ github.event.comment.line }}"
            else
              echo "💡 이슈 댓글은 무시됨"
              exit 0
            fi

          elif [[ "${{ github.event_name }}" == "pull_request_review_comment" ]]; then
            EVENT_LABEL="PR 코드리뷰 댓글"
            TITLE="${{ github.event.pull_request.title }}"
            LINK="${{ github.event.comment.html_url }}"
            COMMENT="${{ github.event.comment.body }}"
            FILE="${{ github.event.comment.path }}"
            LINE="${{ github.event.comment.line }}"

          elif [[ "${{ github.event_name }}" == "issues" ]]; then
            EVENT_LABEL="이슈"
            TITLE="${{ github.event.issue.title }}"
            LINK="${{ github.event.issue.html_url }}"
          else
            EVENT_LABEL="기타"
            TITLE="N/A"
            LINK=""
          fi

          echo "event_label=$EVENT_LABEL" >> $GITHUB_OUTPUT

          BODY+="📌 이벤트 종류: $EVENT_LABEL"$'\n'
          BODY+="📁 리포지토리: ${{ github.repository }}"$'\n'
          BODY+="🛠️ 액션: ${{ github.event.action || 'N/A' }}"$'\n'
          BODY+="📝 제목: ${TITLE:-N/A}"$'\n'
          BODY+="🙋 작성자: ${{ github.actor }}"$'\n'
          [[ -n "$LINK" ]] && BODY+="🔗 링크: $LINK"$'\n'
          [[ -n "$COMMENT" ]] && BODY+="🗨️ 댓글 내용: $COMMENT"$'\n'
          [[ -n "$FILE" ]] && BODY+="📄 파일: $FILE"$'\n'
          [[ -n "$LINE" ]] && BODY+="📌 위치: Line $LINE"$'\n'

          # ✅ 줄바꿈 유지한 멀티라인 출력 방식
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: GitHub 알림 - ${{ steps.set_event_name.outputs.event_label }} 발생!
          body: ${{ steps.set_event_name.outputs.body }}
          to: indextrown@gmail.com, youbizone@gmail.com
          from: GitHub Notifier <${{ secrets.MAIL_USERNAME }}>
